generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               String    @id @default(uuid()) @db.Char(36)
  nome             String    @db.VarChar(255)
  email            String    @unique @db.VarChar(255)
  senha            String    @db.VarChar(512)
  telefone         String?   
  esquecido        Boolean   @default(false)
  data_criacao     DateTime  @default(now())
  data_atualizacao DateTime  @updatedAt
  consentimentos   HistoricoConsentimento[] 
  notificacoes     Notificacao[] 
  exportacoes      Exportacao[] 
  cpf              String    @unique
  role             Role      @default(USER)
}

model Termo {
  id                String   @id @default(uuid()) @db.Char(36)
  versao            Int
  itens_obrigatorios Json     // Alterado para Json
  itens_opcionais    Json     // Alterado para Json
  data_criacao      DateTime @default(now())
  consentimentos    HistoricoConsentimento[] 
}

model HistoricoConsentimento {
  id                 String   @id @default(uuid()) @db.Char(36)
  id_usuario         String   @db.Char(36)
  id_termo           String   @db.Char(36)
  aceito             Boolean
  confirmado         Boolean  @default(false)
  data_consentimento DateTime @default(now())

  usuario Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade) 
  termo   Termo   @relation(fields: [id_termo], references: [id], onDelete: Cascade) 

  @@index([id_usuario])
  @@index([id_termo])
}

model Notificacao {
  id          String   @id @default(uuid()) @db.Char(36)
  id_usuario  String   @db.Char(36)
  mensagem    String   @db.Text
  lida        Boolean  @default(false)
  data_envio  DateTime @default(now())

  usuario Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade) 

  @@index([id_usuario])
}

model Backup {
  id          String   @id @default(uuid()) @db.Char(36)
  arquivo     String   @db.VarChar(255)
  data_backup DateTime @default(now())
}

model Exportacao {
  id              String   @id @default(uuid()) @db.Char(36)
  id_usuario      String   @db.Char(36)
  formato         String   @db.VarChar(50)
  data_exportacao DateTime @default(now())

  usuario Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade) 

  @@index([id_usuario])
}

enum Role {
  ADMIN
  RH
  TI
  FUNCIONARIO
  USER
}
